{{template "base" .}}

{{define "title"}}
    All Sales
{{end}}

{{define "content"}}
    <h2 class="mt-5">All Sales</h2>

    <table id="sales_table" class="table">
        <thead>
            <tr>
                <th scope="col">Transaction</th>
                <th scope="col">Customer</th>
                <th scope="col">Product</th>
                <th scope="col">Amount</th>
                <th scope="col">Status</th>
            </tr>
        </thead>

        <tbody>

        </tbody>
    </table>

    <nav aria-label="Page navigation example">
        <ul id="paginator" class="pagination">

        </ul>
    </nav>
{{end}}

{{define "js"}}
    <script>
        let currentPage = 1
        let itemsAmount = 2

        function updatePagination(allOrders, currentPage) {
            let paginator = document.getElementById('paginator')
            let listItem = `<li class="page-item"> <a href="#!" class="page-link listItem" data-page="${currentPage - 1}">&lt;</a> </li>`
            let nextPageNumber

            allOrders.forEach((_, index) => {
                nextPageNumber = index + 1
                listItem += `<li class="page-item"> <a href="#!" class="page-link listItem" data-page="${index + 1}">${index + 1}</a> </li>`
            })

            listItem += `<li class="page-item"> <a href="#!" class="page-link listItem" data-page="${nextPageNumber + 1}">&gt;</a> </li>`

            paginator.innerHTML = listItem

            let pageButtons = document.getElementsByClassName('listItem')

            for (let i = 0; i < pageButtons.length; i++) {
                pageButtons[i].addEventListener('click', (event) => {
                    let desiredPage = event.target.getAttribute('data-page')

                    if (pageButtons.length > 0 && desiredPage <= allOrders.length + 1) {
                        updateTable(itemsAmount, desiredPage)
                    }
                })
            }
        }

        function updateTable(itemsAmount, currentPage) {
            const token = localStorage.getItem("token")
            const payload = {
                itemsAmount: parseInt(itemsAmount),
                currentPage: parseInt(currentPage),
            }


            console.log('payload :', payload)

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer '+ token,
                },
                body: JSON.stringify(payload),
            }

            fetch("{{.Api}}/api/admin/all-sales", requestOptions)
                .then(response => response.json())
                .then(result => {
                    if (result.error) {
                        // show an error
                    } else {
                        console.log('result :', result)
                        const tableBody = document.getElementById('sales_table').getElementsByTagName('tbody')[0]
                        tableBody.innerHTML = ''

                        updatePagination(result.allOrders, result.currentPage)
                        appendDataFromResponseIntoTable(result.allOrders)
                    }
                })
        }

        document.addEventListener("DOMContentLoaded", () => {
            updateTable(itemsAmount, currentPage)
        })

        function appendDataFromResponseIntoTable(allOrders) {
            let tableBody = document.getElementById('sales_table').getElementsByTagName('tbody')[0]

            if (allOrders.length !== 0) {
                allOrders.forEach(item => {
                    const newRow = tableBody.insertRow()

                    let newCell = newRow.insertCell()
                    newCell.innerHTML = `<a href="/admin/sales/${item.id}">Order ${item.id}</a>`

                    newCell = newRow.insertCell()
                    let node = document.createTextNode(`${item.customer.lastName} ${item.customer.firstName}`)
                    newCell.appendChild(node)

                    newCell = newRow.insertCell()
                    node = document.createTextNode(item.widget.name)
                    newCell.appendChild(node)

                    newCell = newRow.insertCell()
                    node = document.createTextNode(`$${parseInt(item.transaction.amount) / 100}`)
                    newCell.appendChild(node)

                    newCell = newRow.insertCell()

                    if (item.statusId !== 1) {
                        newCell.innerHTML = `<span class="badge bg-danger">Refunded</span>`
                    } else {
                        newCell.innerHTML = `<span class="badge bg-success">Charged</span>`
                    }
                })
            } else {
                const newRow = tableBody.insertRow()
                let newCell = newRow.insertCell()

                newCell.setAttribute('colspan', "5")
                newCell.innerHTML = 'No data available'
            }
        }
    </script>
{{end}}