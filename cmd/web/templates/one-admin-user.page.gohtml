{{template "base" .}}

{{define "title"}}
    Admin User
{{end}}

{{define "content"}}
    <h2 class="mt-5">Admin User</h2>
    <hr>

    <form action="" method="post" id="user_form" name="userForm" class="needs-validation" novalidate="" autocomplete="off">
        <div class="mb-3">
            <label for="first_name" class="form-label">First Name</label>
            <input type="text" id="first_name" name="firstName" class="form-control" required autocomplete="first-name-new">
        </div>

        <div class="mb-3">
            <label for="last_name" class="form-label">Last Name</label>
            <input type="text" id="last_name" name="lastName" class="form-control" required autocomplete="last-name-new">
        </div>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" id="email" name="email" class="form-control" autocomplete="email-new">
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" id="password" name="password" class="form-control" autocomplete="password-new">
        </div>

        <div class="mb-3">
            <label for="validate_password" class="form-label">Confirm Password</label>
            <input type="password" id="validate_password" name="validatePassword" class="form-control" required autocomplete="validate-password-new">
        </div>

        <div class="float-start">
            <a onclick="onUserEdit()" class="btn btn-primary" id="save-btn">Save Changes</a>
            <a href="/admin/all-admin-users" class="btn btn-warning" id="cancel-btn">Cancel</a>
        </div>

        <div class="float-end">
            <a onclick="onUserDelete()" class="btn btn-danger d-none" id="delete_btn">Delete User</a>
        </div>
    </form>
{{end}}

{{define "js"}}
    {{$loggedUserID := index .IntMap "loggedUserID"}}

    <script>
        const token = localStorage.getItem('token')
        const id = window.location.pathname.split('/').pop()
        const deleteButton = document.getElementById('delete_btn')

        document.addEventListener("DOMContentLoaded", () => {
            if (id !== "0") {
                const requestOptions = {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json',
                        'Authorization': 'Bearer ' + token,
                    }
                }

                fetch("{{.Api}}/api/admin/all-admin-users/" + id, requestOptions)
                    .then(response => response.json())
                    .then(parsedResponse => {
                        if (parsedResponse.error) {
                            // show an error
                        } else {
                            document.getElementById('first_name').value = parsedResponse.firstName
                            document.getElementById('last_name').value = parsedResponse.lastName
                            document.getElementById('email').value = parsedResponse.email

                            if (parsedResponse.id !== {{$loggedUserID}}) {
                                deleteButton.classList.remove('d-none')
                            }
                        }
                    })
            }
        })

        const onUserDelete = () => {
            const payload = {
                id,
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload),
            }

            fetch("{{.Api}}/api/admin/all-admin-users/" + id, requestOptions)
                .then(response => response.json())
                .then(parsedResponse => {
                    console.log('parsedResponse :', parsedResponse)
                })
        }

        const onUserEdit = () => {

        }
    </script>

{{end}}