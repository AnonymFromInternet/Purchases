{{define "stripe-js"}}
    <script src="https://js.stripe.com/v3"></script>

    <script>
        let card
        let stripe = Stripe("{{index .StripePublicKey}}")

        const cardMessages = document.getElementById('card_messages')
        const payButton = document.getElementById('pay_button')
        const processing = document.getElementById('processing_payment')

        function onChargeCardVirtualTerminal() {
            console.log('onChargeCardVirtualTerminal()')
            let form = document.getElementById('charge_form')

            if (!form.checkValidity()) {
                this.event.preventDefault()
                this.event.stopPropagation()
                form.classList.add('was-validated')
            } else {
                form.classList.add('was-validated')
                hidePayButton()
                postPaymentIntent()
            }
        }

        function postPaymentIntent() {
            console.log('postPaymentIntent()')
            let amountToCharge = String(parseFloat(document.getElementById('amount').value) * 100)

            let payload = {
                amount: amountToCharge,
                currency: 'USD',
            }

            console.log('calling api api/payment-intent')

            fetch("{{.Api}}/api/payment-intent", {
                method: 'post',
                mode: 'cors',
                headers:{
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload),
            })
                .then(response => response.text())
                .then(data => {
                    let parsedData
                    console.log('get response from handlerPostPaymentIntent from api')

                    try {
                        parsedData = JSON.parse(data)
                        console.log('parsedData :', parsedData)

                        stripe.confirmCardPayment(parsedData.client_secret, {
                            payment_method: {
                                card: card,
                                billing_details: {
                                    name: document.getElementById('first_name').value
                                },
                            }
                        }).then(result => {
                            console.log('response from stripe')
                            if (result.error) {
                                showCardError(result.error.message)
                                showPayButton()

                                return
                            }

                            if (result.paymentIntent) {
                                if (result.paymentIntent.status === "succeeded") {
                                    hideLoadingSpinner()
                                    showCardSuccess()
                                    saveTransaction(result)
                                }
                            }
                        })
                    } catch (e) {
                        showCardError(e)
                        showPayButton()
                    }
                })
        }

        function saveTransaction(result) {
            console.log('saveTransaction()')
            console.log('result :', result)
            const payload = {
                amount: parseInt(document.getElementById('amount').value) * 100,
                currency: result.paymentIntent.currency,
                firstName: '',
                lastName: '',
                email: document.getElementById('email').value,
                paymentIntent: result.paymentIntent.id,
                paymentMethod: result.paymentIntent.payment_method,
            }

            console.log('payload :', payload)

            const token = localStorage.getItem("token")

            const requestOptions = {
                method: 'post',
                headers: {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token,
                },
                body: JSON.stringify(payload),
            }

            console.log('calling api api/admin/payment-succeeded-virtual-terminal')

            fetch("{{.Api}}/api/admin/payment-succeeded-virtual-terminal", requestOptions)
                .then(response => response.json())
                .then(() => {
                    hideLoadingSpinner()
                    showCardSuccess()
                    showPaymentSucceededPart()
                })
        }

        function showPaymentSucceededPart() {
            document.getElementById('succeeded_part').classList.remove("d-none")
        }

        function hideLoadingSpinner() {
            processing.classList.add('d-none')
        }

        function showLoadingSpinner() {
            processing.classList.remove('d-none')
        }

        function showCardError(error) {
            cardMessages.classList.add('alert-danger')
            cardMessages.classList.remove('alert-success')
            cardMessages.classList.remove('d-none')
            cardMessages.innerText = error
        }

        function showCardSuccess() {
            cardMessages.classList.remove('alert-danger')
            cardMessages.classList.add('alert-success')
            cardMessages.classList.remove('d-none')
            cardMessages.innerText = 'Transaction was successfully'
        }

        function showPayButton() {
            payButton.classList.remove('d-none')
            processing.classList.add('d-none')
        }

        function hidePayButton() {
            payButton.classList.add('d-none')
            // processing.classList.remove('d-none')
        }

        // stripe connection to get settings for html element
        (() => {
            // creating stripe and elements
            const elements = stripe.elements()
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px',
                }
            }

            card = elements.create('card', {
                style,
                hidePostalCode: true,
            })

            card.mount('#card_element')

            card.addEventListener('change', (event) => {
                let cardErrors = document.getElementById('card_errors')

                if (event.error) {
                    cardErrors.classList.remove('d-none')
                    cardErrors.textContent = event.error.message
                } else {
                    cardErrors.classList.add('d-none')
                    cardErrors.textContent = ''
                }
            })

        })();
        function checkAuthentication() {
            let token = localStorage.getItem("token")

            if (token) {
                const headers = new Headers()
                headers.append("Content-Type", "application/json")
                headers.append("Authorization", "Bearer " + token)

                const requestOptions = {
                    method: 'post',
                    headers: headers,
                }

                fetch("{{.Api}}/api/is-authenticated", requestOptions)
                    .then(response => response.json())
                    .then(data => {
                        if (!data.error) {
                            console.log('logged in')
                        } else {
                            console.log('not logged in')
                            location.href = "/main"
                        }
                    })
            } else {
                location.href = "/main"
            }
        }

        function onChargeCardBuyOnce() {
            console.log('onChargeCardBuyOnce()')
            let form = document.getElementById("charge_form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return;
            }
            form.classList.add("was-validated");
            hidePayButton();

            let amountToCharge = document.getElementById("amount").value;

            let payload = {
                amount: amountToCharge,
                currency: 'USD',
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload),
            }

            fetch("{{.Api}}/api/payment-intent", requestOptions)
                .then(response => response.text())
                .then(response => {
                    let data;
                    try {
                        data = JSON.parse(response);
                        stripe.confirmCardPayment(data.client_secret, {
                            payment_method: {
                                card: card,
                                billing_details: {
                                    name: document.getElementById("last_name").value,
                                }
                            }
                        }).then(function(result) {
                            if (result.error) {
                                // card declined, or something went wrong with the card
                                showCardError(result.error.message);
                                showPayButton();
                            } else if(result.paymentIntent) {
                                if (result.paymentIntent.status === "succeeded") {
                                    // we have charged the card
                                    document.getElementById("payment_method").value = result.paymentIntent.payment_method;
                                    document.getElementById("payment_intent").value = result.paymentIntent.id;
                                    document.getElementById("payment_amount").value = result.paymentIntent.amount;
                                    document.getElementById("payment_currency").value = result.paymentIntent.currency;
                                    processing.classList.add("d-none");
                                    showCardSuccess();

                                    document.getElementById("charge_form").submit();
                                }
                            }
                        })
                    } catch (err) {
                        console.log(err);
                        showCardError("Invalid response from payment gateway!");
                        showPayButton();
                    }
                })
        }
    </script>
{{end}}